.. _make_3d_plots:

.. index:: make_3d_plots.py

*make_3d_plots.py* -- Make 3D PCoA plots
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

**Description:**

This script automates the construction of 3D plots (kinemage format) from the PCoA output file generated by `principal_coordinates.py <./principal_coordinates.html>`_ (e.g. P1 vs. P2 vs. P3, P2 vs. P3 vs. P4, etc., where P1 is the first component).


**Usage:** :file:`make_3d_plots.py [options]`

**Input Arguments:**

.. note::

	
	**[REQUIRED]**
		
	-i, `-`-coord_fname
		This is the path to the principal coordinates file (i.e., resulting file from `principal_coordinates.py <./principal_coordinates.html>`_)
	-m, `-`-map_fname
		This is the metadata mapping file  [default=None]
	
	**[OPTIONAL]**
		
	-b, `-`-colorby
		This is the categories to color by in the plots from the user-generated mapping file. The categories must match the name of a column header in the mapping file exactly and multiple categories can be list by comma separating them without spaces. The user can also combine columns in the mapping file by separating the categories by "&&" without spaces [default=None]
	-a, `-`-custom_axes
		This is the category from the user-generated mapping file to use as a custom axis in the plot.  For instance,there is a pH category and would like to seethe samples plotted on that axis instead of PC1, PC2, etc., one can use this option.  It is also useful for plotting time-series data [default: None]
	-p, `-`-prefs_path
		This is the user-generated preferences file. NOTE: This is a file with a dictionary containing preferences for the analysis [default: None]
	-k, `-`-background_color
		This is the background color to use in the plots (Options are 'black' or 'white'. [default: None]
	-o, `-`-output_dir
		Path to the output directory
	-t, `-`-taxa_fname
		If you wish to perform a biplot, where taxa are plotted along with samples, supply an otu table format file.  Typically this is the output from `summarize_taxa.py <./summarize_taxa.html>`_.
	`-`-n_taxa_keep
		If performing a biplot, the number of taxa to display; use -1 to display all. [default: 10]


**Output:**

By default, the script will plot the first three dimensions in your file. Other combinations can be viewed using the "Views:Choose viewing axes" option in the KiNG viewer (Chen, Davis, & Richardson, 2009), which may require the installation of kinemage software. The first 10 components can be viewed using "Views:Paralled coordinates" option or typing "/". The mouse can be used to modify display parameters, to click and rotate the viewing axes, to select specific points (clicking on a point shows the sample identity in the low left corner), or to select different analyses (upper right window). Although samples are most easily viewed in 2D, the third dimension is indicated by coloring each sample (dot/label) along a gradient corresponding to the depth along the third component (bright colors indicate points close to the viewer).


**Default Usage:**

If you just want to use the default output, you can supply the principal coordinates file (i.e., resulting file from `principal_coordinates.py <./principal_coordinates.html>`_) and a user-generated mapping file, where the default coloring will be based on the SampleID as follows:

::

	make_3d_plots.py -i beta_div_coords.txt -m Mapping_file.txt

To include taxa in the plot (i.e.: a biplot), use the -t option along with an otu table / output from `summarize_taxa.py <./summarize_taxa.html>`_

Additionally, the user can supply their mapping file ("-m") and a specific category to color by ("-b") or any combination of categories. When using the -b option, the user can specify the coloring for multiple mapping labels, where each mapping label is separated by a comma, for example: -b 'mapping_column1,mapping_column2'. The user can also combine mapping labels and color by the combined label that is created by inserting an '&&' between the input columns, for example: -b 'mapping_column1&&mapping_column2'.

If the user would like to color all categories in their metadata mapping file, they can pass 'ALL' to the '-b' option, as follows:

::

	make_3d_plots.py -i beta_div_coords.txt -m Mapping_file.txt -b ALL

As an alternative, the user can supply a preferences (prefs) file, using the -p option. The prefs file allows the user to give specific samples their own columns within a given mapping column. This file also allows the user to perform a color gradient, given a specific mapping column.

If the user wants to color by using the prefs file (e.g. prefs.txt), they can use the following code:

::

	make_3d_plots.py -i beta_div_coords.txt -m Mapping_file.txt -p prefs.txt


**Output Directory:**

If you want to give an specific output directory (e.g. "3d_plots"), use the following code:

::

	make_3d_plots.py -i principal_coordinates-output_file --o 3d_plots/

**Background Color Example:**

If the user would like to color the background white they can use the '-k' option as follows:

::

	make_3d_plots.py -i beta_div_coords.txt -m Mapping_file.txt -b ALL -k white


